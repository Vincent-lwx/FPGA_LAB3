module vm (
    input sys_clk,
    input sys_rst_n,
    input pi_money_one,
    input pi_money_half,

    output po_money_half,
    output po_money_one,
    output reg po_cola
);

parameter IDLE = 4'b0001;
parameter HALF = 4'b0010;
parameter ONE = 4'b0100;
parameter ONE_HALF = 4'b1000;

reg [3:0] state;
reg [3:0] state_saved;       // 状态保存寄存器
reg [1:0] pi_money_saved;     // 投入金额保存寄存器
wire [1:0] pi_money;
reg [1:0] po_money;

assign pi_money = {pi_money_one, pi_money_half};
assign po_money_one = (po_money == 2'b10) ? 1'b1 : 1'b0;
assign po_money_half = (po_money == 2'b01) ? 1'b1 : 1'b0;

// 状态保存逻辑
always@(posedge sys_clk or negedge sys_rst_n) begin
    if(sys_rst_n == 1'b0) begin
        state_saved <= IDLE;
        pi_money_saved <= 2'b00;
    end else begin
        state_saved <= state;
        pi_money_saved <= pi_money;
    end
end

// 状态机逻辑：根据输入跳转状态
always@(posedge sys_clk or negedge sys_rst_n) begin
    if(sys_rst_n == 1'b0)
        state <= IDLE;
    else 
        case(state)
            IDLE : 
                if(pi_money == 2'b01) // 投入 0.5 元
                    state <= HALF;
                else if(pi_money == 2'b10) // 投入 1 元
                    state <= ONE;
                else
                    state <= IDLE;

            HALF : 
                if(pi_money == 2'b01)
                    state <= ONE;
                else if(pi_money == 2'b10)
                    state <= ONE_HALF;
                else
                    state <= HALF;

            ONE : 
                if(pi_money == 2'b01)
                    state <= ONE_HALF;
                else if(pi_money == 2'b10)
                    state <= IDLE;  // 投入 1 元直接购买饮料，回到 IDLE
                else
                    state <= ONE;

            ONE_HALF : 
                if(pi_money == 2'b01 || pi_money == 2'b10)
                    state <= IDLE;
                else
                    state <= ONE_HALF;

            default : 
                state <= IDLE;
        endcase
end

// 出货逻辑
always@(posedge sys_clk or negedge sys_rst_n) begin
    if(sys_rst_n == 1'b0)
        po_cola <= 1'b0;
    else if((state == ONE_HALF && pi_money != 2'b00) || (state == ONE && pi_money == 2'b10))
        po_cola <= 1'b1;
    else
        po_cola <= 1'b0;
end

// 退款逻辑
always@(posedge sys_clk or negedge sys_rst_n) begin
    if(sys_rst_n == 1'b0) begin
        po_money <= 2'b00; // 复位时，输出的退款金额为 0
    end else if(state == IDLE && pi_money == 2'b00) begin // 退币条件：状态为空闲且没有新币投入
        case(state_saved)
            IDLE: po_money <= pi_money_saved;   // 如果上一次状态是 IDLE，退还保存的金额
            HALF: po_money <= 2'b01;            // 如果上一次状态是 HALF，退 0.5 元
            ONE: po_money <= 2'b10;             // 如果上一次状态是 ONE，退 1 元
            ONE_HALF: po_money <= 2'b11;        // 如果上一次状态是 ONE_HALF，退 1.5 元
            default: po_money <= 2'b00;
        endcase
    end else begin
        po_money <= 2'b00; // 正常情况下不退币
    end
end

endmodule
